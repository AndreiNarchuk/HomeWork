package HomeWork1;

public class home_work_1_2 {

    public static void main(String[] args) {

        int a = 8;
        int b = 5;
        int c = 2;
        int d = 20;
        int e = 68;
        int f = 22;
        int g = 12;
        int h = 119;

        // 2.1)  5 + 2 / 8
        int answer1 = b + c / a;
        //Пример принимает вид 5+1/4, что равно 5,2, а т.к. переменная "answer1" определена как int ответ равен 5
        System.out.println("2.1)  5 + 2 / 8 = " +answer1);

        //2.2)  (5 + 2) / 8
        int answer2 = (b + c) / a;
        //Пример принимает вид 7/8, т.к. переменная "answer2" определена как int ответ равен 0 (остаток 7)
        System.out.println("2.2)  (5 + 2) / 8 = " +answer2);

        //2.3)  (5 + 2++) / 8
        int answer3 = (b + c) / a;
        //Пример принимает вид 7/8, ответ равен 0 т.к. с++ пост унарный оператор и в примерах 2++ = 2
        System.out.println("2.3)  (5 + 2++) / 8 = " +answer3);

        //2.4)  (5 + 2++) / --8
        int answer4 = (b + c) / --a;
        //Пример принимает вид 7/7, ответ равен 1, --a пред унарный оператор и в дальнейшем в a запишется значение 7
        System.out.println("2.4)  (5 + 2++) / --8 = "+answer4);

        //2.5)  (5 * 2 >> 2++) / --8
        int answer5 = (b * c >> c) / a;
        //Первое действие в скобках умножение 5*2 далее 10>>2, знаки в 1010 смещаются на два вправо, вид 0010 что равно 2, пример принимает вид 2/7, ответ равен 0 (остаток 2)
        System.out.println("2.5)  (5 * 2 >> 2++) / --8 = "+answer5);

        //2.6)  (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
        int answer6 = (b + a > d? e:f * c >> c) / a;
        //(12>20? 68:44>>2)/7, где 44 при сдвиге преобразуется в 11, а тернарный опратор будет иметь значение false, следовательно пример принимает вид 11/7, ответ равен 1 (остаток 4)
        System.out.println("2.6)  (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8 = "+answer6);

        //2.7)  (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8
        //int answer7 = (b + a > d? e >= e:f * c >> c)/a // Часть выражения 68>=68 является boolean, а все выражение определено как integer, что не позволяет скомпелировать выражение
        System.out.println("2.7)  (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8 (Не компелируется)" );

        //2.8)  6 - 2 > 3 && 12 * 12 <= 119
        boolean answer8 = --a - c > ++c && g * g <= h;
        //Левая часть true (4>3), а правая false (144 <= 119) следовательно результат работы && станет false
        System.out.println("2.8)  6 - 2 > 3 && 12 * 12 <= 119 = "+answer8);

        //2.9)  true && false
        boolean answer9 = true && false;
        //Левая часть true, а правая false следовательно результат работы && станет false
        System.out.println("2.9)  true && false = " +answer9);

    }
}
